/**
 * Module dependencies
 */
var crypto = require('crypto');
var should = require('should');
var fs = require('fs');
var lib = require('../');
var key = './key.pem';
var cert = './cert.pem';

describe('Crypto', function () {

  describe('encrypt by hash', function () {

    it('encrypt cookfront by md5 algorithm should return right string', function () {
      var str = 'cookfront';
      var encryptStr = '1d744363cfb79c7079ddcf92a0f2051a';
      str = lib.hash(str);
      str.should.equal(encryptStr);
    });

    it('should throw error when set unsupport algorithm', function () {
      var str = 'cookfront';
      (function () { lib.hash(str, 'unkonw algorithm'); }).should.throw();
    });

  });

  describe('encrypt by hmac', function () {

    it('encrypt cookfront by sha1 algorithm', function () {
      var str = 'cookfront';
      var encryptStr = '744806d899acabcb9211acd47667e855f93dbf18';
      str = lib.hmac(str, key);
      str.should.equal(encryptStr);
    });

  });

  describe('encrypt and decrypt by cipher', function () {

    it('encrypt cookfront by aes192 algorithm', function () {
      var str = 'cookfront';
      var encryptStr = '8cd16adb8d6d54dc7c10fa7b45ca6e35';
      str = lib.cipher(str, key);
      str.should.equal(encryptStr);
    });

    it('decrypt by aes192 algorithm', function () {
      var str = '8cd16adb8d6d54dc7c10fa7b45ca6e35';
      var decryptStr = 'cookfront';
      str = lib.decipher(str, key);
      str.should.equal(decryptStr);
    });

  });

  describe('sign and verify string', function () {

    it('should sign string right', function () {
      var str = 'cookfront';
      var signStr = '8fd25e3cb3c601bab769578f08b4d5250a94154cea8476898d441eecbace769854c9e9f726da388b2b33593f904cf0bb25642675ea39845114cb2f92ca2951af43be75bbdfa660daf74e9b05fe0d83132da05fdc3036fe7b2330dc3d0740ff497b8e5e39668c7db6fbf9276c79bf56da11f7f29e0d1ef2e4ab00211b236c9be0';
      str = lib.sign(str, key);
      str.should.equal(signStr);
    });

    it('should verify string right', function () {
      var str = 'cookfront';
      var verifyStr = '8fd25e3cb3c601bab769578f08b4d5250a94154cea8476898d441eecbace769854c9e9f726da388b2b33593f904cf0bb25642675ea39845114cb2f92ca2951af43be75bbdfa660daf74e9b05fe0d83132da05fdc3036fe7b2330dc3d0740ff497b8e5e39668c7db6fbf9276c79bf56da11f7f29e0d1ef2e4ab00211b236c9be0';
      lib.verify(str, verifyStr, cert).should.be.true;
    });

  });

});